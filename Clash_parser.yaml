parsers: # array
  # 更多语法详见https://docs.cfw.lbyczf.com/contents/parser.html#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E
  # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
  - reg: ^.*$
  # 删除服务商提供的策略组和规则
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const groups = []
        const rules = []
        return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
      } 
  # 建立自己的配置
    yaml:
      prepend-proxy-groups: # 建立策略组

        - name: 📶 Auto #测速自动选择     
          type: url-test
          url: http://www.google.com/generate_204
          interval: 86400

        - name: 🚩 CustomIP #选择地区（根据地区分类节点）
          type: select
          proxies:
            - 🌐 北美
            - 📶 Auto
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 大洋洲 
            - 🌐 冷门国家
            - ✔️ PROXY

        - name: ✈️ OutSide #国外网站默认
          type: select
          proxies:
            - 🚩 CustomIP
            - 📶 Auto          
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 大洋洲 
            - 🌐 冷门国家
            - ✔️ PROXY
            
        ##########################################################
        - name: 🌐 北美
          type: select

        - name: 🌐 欧洲 
          type: select
        
        - name: 🌐 港澳台
          type: select
        
        - name: 🌐 日韩新
          type: select
          
        - name: 🌐 大洋洲 
          type: select

        - name: 🌐 冷门国家 
          type: select

        ##########################################################
        - name: 🔘 Option #自选模式
          type: select
          proxies:
            - DIRECT
            - 📶 Auto
            - ✔️ PROXY
            - 🚩 CustomIP 
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 大洋洲 
            - 🌐 冷门国家    

        - name: ♾️ Final #终极策略/黑白名单模式
          type: select
          proxies:
            - ✈️ OutSide
            - 📶 Auto 
            - DIRECT # 仅此为黑名单模式，意为「只有命中规则的网络流量，才使用代理」
            - ✔️ PROXY
            - 🚩 CustomIP 
            - 🌐 北美
            - 🌐 欧洲
            - 🌐 港澳台 
            - 🌐 日韩新 
            - 🌐 大洋洲 
            - 🌐 冷门国家        

        - name: ✔️ PROXY #选择节点
          type: select
          proxies:
            - 📶 Auto

        - name: 🎯 Direct
          type: select
          proxies:
            - DIRECT
            - 📶 Auto
            - ✔️ PROXY
            - 🚩 CustomIP 

        - name: 🚫 Reject
          type: select
          proxies:
            - REJECT
            - DIRECT


            

            
  # 策略组示例
       # - name: 分组名
         # type: select       # 手动选点   
               # url-test     # 自动选择延迟最低的节点
               # fallback     # 节点故障时自动切换下一个
               # laod-balance # 均衡使用分组内的节点
         # url: http://www.google.com/generate_204 # 测试地址 非select类型分组必要
         # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
         # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
         # proxies:  
           # - 节点名称或其他分组套娃
          
      commands:
        # commands键中每个命令可以被分为三个部分，分别是：定位+操作+设定值
        # 定位：数组类型定位由下标0开始计算，定位中每个层级以.分割，proxy-groups.0.proxies.2表示定位到第一个策略组的第三个位置
        # 操作：“=”覆盖，“+”在此前插入，“-”删除此位置的值
        # 3 个内置值可用于设置策略组节点，分别是[]proxyNames，[]groupNames和[]shuffledProxyNames
        # 例：proxy-groups.myGroup.proxies=[]proxyNames|HK # 向策略组myGroup添加所有定义的节点名，并按“HK”正则表达式过滤

        - proxy-groups.✔️ PROXY.proxies=[]proxyNames # 向指定策略组添加订阅中的所有节点名       
        - proxy-groups.📶 Auto.proxies=[]proxyNames|^((?!music|𝐌𝐮𝐬𝐢𝐜|Unbolck|网易云|云音乐|Music|Netease|🎶|手游|游戏|game).)*$
        - proxy-groups.✔️ PROXY.proxies.0+📶 Auto # 向指定分组第一个位置添加一个 📶 Auto 节点名

        # 向指定分组第一个位置添加一个 DIRECT 节点名，避免机场节点无法匹配上面的正则筛选而导致配置出错。 
        - proxy-groups.🌐 北美.proxies.0=DIRECT
        - proxy-groups.🌐 欧洲.proxies.0=DIRECT
        - proxy-groups.🌐 港澳台.proxies.0=DIRECT
        - proxy-groups.🌐 日韩新.proxies.0=DIRECT
        - proxy-groups.🌐 大洋洲.proxies.0=DIRECT
        - proxy-groups.🌐 冷门国家.proxies.0=DIRECT

        # 向指定分组的第一个位置前插入添加订阅中的节点名，并按相应正则表达式过滤
        # ↓匹配包含美国|美國|United States|US中至少一个且不包含2x|3x|5x|10x中任何一个的节点
        # ^(?=.*(?:美国|美國|United States|US))(?!.*(?:2x|3x|5x|10x)).*$    ^(?=.*(?:))(?!.*(?:)).*$    

        - proxy-groups.🌐 北美.proxies.0+[]proxyNames|^(?=.*(?:美国|美國|United States|US|us|加拿大|Canada))(?!.*(?:2x|3x|5x|10x)).*$
        - proxy-groups.🌐 欧洲.proxies.0+[]proxyNames|^(?=.*(?:德国|德國|Germany|DE|Ger|英国|英國|UK|uk|法国|法國|France|FR|意大利))(?!.*(?:2x|3x|5x|10x)).*$
        - proxy-groups.🌐 港澳台.proxies.0+[]proxyNames|^(?=.*(?:香港|京港|HK|Hong Kong|澳门|澳門|Macau|台湾|台灣|TW|Taiwan))(?!.*(?:2x|3x|5x|10x)).*$
        - proxy-groups.🌐 日韩新.proxies.0+[]proxyNames|^(?=.*(?:日本|川日|沪日|深日|京日|JP|Japan|韩|韓|KR|Korea|KOR|新加坡|狮城|SG|Singapore))(?!.*(?:2x|3x|5x|10x)).*$
        - proxy-groups.🌐 大洋洲.proxies.0+[]proxyNames|^(?=.*(?:新西兰|澳大利亚|澳大利亞|Australia))(?!.*(?:2x|3x|5x|10x)).*$
        - proxy-groups.🌐 冷门国家.proxies.0+[]proxyNames|^((?!2x|3x|5x|10x|剩余|套餐|到期|美国|美國|United States|US|us|加拿大|Canada|德国|德國|Germany|DE|Ger|英国|英國|UK|uk|法国|法國|France|FR|意大利|香港|京港|Hong Kong|澳门|澳門|Macau|台湾|台灣|TW|Taiwan|日本|川日|沪日|深日|京日|JP|Japan|韩|韓|KR|Korea|KOR|新加坡|狮城|SG|Singapore|新西兰|澳大利亚|澳大利亞|Australia).)*$
        # 冷门国家，过滤其他所有国家节点
        # 若不需排除，可直接用proxy-groups.策略组名.proxies.0+[]proxyNames|美国|美國|United States|US|us|加拿大|Canada

        # 一些可能用到的正则过滤节点示例，使分组更细致
        # []proxyNames|a                         # 包含a
        # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
        # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
        # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
        # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c
        # 正则使用可直接咨询chatgpt
        


  # 添加规则
  # 规则集排序：本地局域网 -> 修正Unbreak -> 拦截Reject（广告/劫持） -> 特殊直连 -> 特殊代理 -> 一般直连域名 -> 一般代理域名 -> IP段或者GEO -> 兜底Final

      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
        - RULE-SET,Lan,DIRECT
        - RULE-SET,applications,DIRECT 
        - DOMAIN,clash.razord.top,DIRECT
        - DOMAIN,yacd.haishan.me,DIRECT

        - RULE-SET,Privacy,🚫 Reject
        - RULE-SET,Advertising,🚫 Reject
        - RULE-SET,Hijacking,🚫 Reject
        
        - RULE-SET,OpenAI,🚩 CustomIP
        - RULE-SET,Google,🚩 CustomIP 
        - RULE-SET,Bing,🚩 CustomIP
        - RULE-SET,Microsoft,🔘 Option #电脑微软代理会出错，手机微软直连无法使用Bing app
        - RULE-SET,Apple,🔘 Option #若想icloud和apple使用不同的策略，将icloud规则集顺序放在apple上一位即可

        - RULE-SET,tld-not-cn,✈️ OutSide
        - RULE-SET,gfw,✈️ OutSide
        - RULE-SET,greatfire,✈️ OutSide

        - RULE-SET,China,🎯 Direct
        - GEOIP,,🎯 Direct
        - GEOIP,CN,🎯 Direct
        - RULE-SET,Direct,🎯 Direct

        - RULE-SET,Proxy,✈️ OutSide
        - MATCH,♾️ Final # 规则之外的

  # 添加规则集
      # ruleset 指的是配置中包含的分流规则，
      # custom_proxy_group 指的是最终在Clash中呈现的分流策略组及其排序。

      mix-rule-providers: 
        Lan: # 本地局域网 IP 
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml"
          path: ./ruleset/Lan.yaml
          interval: 86400
          
        applications: # 需要直连的常见软件列表
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
          path: ./ruleset/applications.yaml
          interval: 86400

        Advertising: # 广告域名列表 - 去广告精简版(可能存在部分误拦截，建议搭配放行规则进行修正。)
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AdvertisingLite/AdvertisingLite_Classical.yaml"
          path: ./ruleset/AdvertisingLite_Classical.yaml
          interval: 86400

        Hijacking: # 反劫持
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hijacking/Hijacking.yaml"
          path: ./ruleset/Hijacking.yaml
          interval: 86400
          
        Apple: # Apple 域名列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml"
          path: ./ruleset/Apple_Classical.yaml
          interval: 86400
          
        Google: # Google 域名列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml"
          path: ./ruleset/Google.yaml
          interval: 86400
          
        Bing: # Bing 域名列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.yaml"
          path: ./ruleset/Bing.yaml
          interval: 86400

        Microsoft: # Microsoft 域名列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml"
          path: ./ruleset/Microsoft.yaml
          interval: 86400        

        
        OpenAI: # OpenAI 域名列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml"
          path: ./ruleset/OpenAI.yaml
          interval: 86400
        
        Proxy: # 代理域名列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy_Classical.yaml"
          path: ./ruleset/Proxy_Classical.yaml
          interval: 86400
          
        Direct: # 直连域名列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.yaml"
          path: ./ruleset/Direct.yaml
          interval: 86400
          
        Privacy: # 隐私保护
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Privacy/Privacy_Classical.yaml"
          path: ./ruleset/Privacy_Classical.yaml
          interval: 86400
          
        gfw: # GFWList 域名列表
          type: http
          behavior: domain
          url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
          path: ./ruleset/gfw.yaml
          interval: 86400
          
        greatfire: # GreatFire 域名列表
          type: http
          behavior: domain
          url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt"
          path: ./ruleset/greatfire.yaml
          interval: 86400
          
        tld-not-cn: # 非中国大陆使用的顶级域名列表
          type: http
          behavior: domain
          url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
          path: ./ruleset/tld-not-cn.yaml
          interval: 86400
          
          
        China: # 中国大陆 IP 地址列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China_Classical.yaml"
          path: ./ruleset/China_Classical.yaml
          interval: 86400
          

